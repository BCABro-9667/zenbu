rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/roles_admin/$(userId));
    }

    // Categories: Publicly readable, admin-writable
    match /categories/{categoryId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Products: Publicly readable, admin-writable
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Leads: Admin-only access
    match /leads/{leadId} {
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Orders: Admin-only access
    match /orders/{orderId} {
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Recommendations: User and Admin access
    match /users/{userId}/recommendations/{recommendationId} {
      allow read, write: if request.auth != null && (request.auth.uid == userId || isAdmin(request.auth.uid));
    }

    // Customers: Admin-managed or self-managed
    match /customers/{customerId} {
      allow read, write: if request.auth != null && (request.auth.uid == customerId || isAdmin(request.auth.uid));
    }
    
    // Admin roles: Only other admins can grant admin roles (for future use)
    match /roles_admin/{userId} {
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
